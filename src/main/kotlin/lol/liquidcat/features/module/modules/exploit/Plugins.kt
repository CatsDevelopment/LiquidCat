/*
 * LiquidCat Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CatsDevelopment/LiquidCat
 */
package lol.liquidcat.features.module.modules.exploit

import lol.liquidcat.event.EventTarget
import lol.liquidcat.event.PacketEvent
import lol.liquidcat.event.UpdateEvent
import lol.liquidcat.features.module.Module
import lol.liquidcat.features.module.ModuleCategory
import lol.liquidcat.utils.msg
import lol.liquidcat.utils.sendPacket
import lol.liquidcat.utils.timer.TickTimer
import net.minecraft.network.play.client.C14PacketTabComplete
import net.minecraft.network.play.server.S3APacketTabComplete

object Plugins : Module("Plugins", "Allows you to see which plugins the server is using.", ModuleCategory.EXPLOIT) {

    private val tickTimer = TickTimer()

    override fun onEnable() {
        sendPacket(C14PacketTabComplete("/"))
        tickTimer.reset()
    }

    @EventTarget
    fun onUpdate(event: UpdateEvent) {
        tickTimer.update()

        if (tickTimer.hasTimePassed(20)) {
            msg("\n§8(§9Plugins§8)§r Plugins check timed out...\n")

            tickTimer.reset()
            state = false
        }
    }

    @EventTarget
    fun onPacket(event: PacketEvent) {
        val packet = event.packet

        if (packet is S3APacketTabComplete) {
            val plugins = mutableListOf<String>()
            val commands = packet.func_149630_c()

            for (c in commands) {
                val command = c.split(":")

                if (command.size > 1) {
                    val plugin = command[0].removePrefix("/").capitalize()

                    if (!plugins.contains(plugin))
                        plugins.add(plugin)
                }
            }

            if (plugins.isNotEmpty()) {
                msg("\n§8(§9Plugins§8)§r A total of ${plugins.size} plugins found.")
                msg("§8(§9Plugins§8)§r Plugins:\n §7${plugins.joinToString("§8, §7")}\n")
            } else
                msg("\n§8(§9Plugins§8)§r No plugins found.\n")

            tickTimer.reset()
            state = false
        }
    }
}